syntax = "proto3";
package protos;

service master{//表示Master服务类，定义其可供远程调用的方法
    rpc register_cluster(cluster)returns(status);//初始化集群，建立与ps,worker间连接
    rpc notice_train(note) returns (status);//供Client调用来通知开始训练，返回已收到开始训练
    rpc worker_notice_master_finished(worker_note) returns (status);//提供给worker调用告诉master自己已经完成了迭代
    rpc ps_notice_master_pull_data_finished(note)returns(status);//提供ps調用通知master自己完成了数据提取工作
}

service ps{//ParameterServer服务类
    rpc register_cluster(cluster)returns(status);//初始化集群，建立与workers和master间连接
    rpc send_weight(step) returns (array_weight);//worker远程调用ps的方法
    rpc master_notice_ps_to_pull_data_from_worker(worker_fin_ip) returns (status);//供master调用
    rpc master_notice_ps_aggregate(note) returns (status);//供master调用来通知master来聚合数据
}

service worker{
    rpc register_cluster (cluster) returns (status);//初始化集群，建立与ps间连接
    rpc send_train_data(data) returns (status);//发送训练数据给给个worker
    rpc notice_start_train(note) returns(status);//由master通知worker开始训练
    rpc send_delta(status) returns(delta);//由ps调用，获得worker计算的梯度
}



message cluster{//初始化集群的可装配参数
    string ps = 1;//ps地址
    repeated string workers = 2;//数组，workers地址
    repeated int32 layer=3;//该网络有多少层
    double learn_rate=4;//表示学习速率
    int32 batch_size=5;//表示每个批次训练多少个数据
    string master=6;//表示master的地址
}
message status{//响应参数
    int32 code = 1;//状态码
    string mes = 2;//响应信息
}
message worker_note{//worker通知master的信息
  string w_ip=1;//把自己的ip带上
  string w_f=2;//告诉自己完成了本次训练
  double next_time=3;//自己下次完成的时间
}

message worker_fin_ip{
repeated string w_ip=1;//ip地址
}

message data{ //发送的数据
  int32 index=1;//发送数据的索引
  int32  index_gap=2;//要取多少数据

}

message note{//由client发送开始训练的信号
string notice=1;
}

message array_weight{
   repeated double w=1;//定义权重
   repeated double b=2;//偏执
}

message step{
 int32 step_number=1;
}

message delta{ //用来定义worker要向ps发送的参数
  repeated double w=1;//定义计算出来的梯度
  repeated double b=2;//定义计算出啦的bias
}

message note_finish{//用来定义worker向参数服务发送自己完成反向传播的通知
  string ip_addr=1;//用来传递自己的ip地址，好让参数服务知道是谁告诉自己完成的反向传播训练
}
